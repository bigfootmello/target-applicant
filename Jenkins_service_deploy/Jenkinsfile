pipeline {
    agent any
    tools {
        maven 'Maven3.5.4'

        //CHANGE: based on service (java_11 or java_1.8.0)
        jdk 'java_11'
    }
    environment {
        MVN_EVAL = "org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate"
        APP_NAME = sh (returnStdout: true, script: "mvn '${MVN_EVAL}' -Dexpression=project.name -q -DforceStdout").trim()
        APP_VERSION = sh (returnStdout: true, script: "mvn '${MVN_EVAL}' -Dexpression=project.version -q -DforceStdout").trim()
        JAR = "'${APP_NAME}'-'${APP_VERSION}'.jar"
        START_SERVICE = "start_'${APP_NAME.replace('-','_')}'.sh"
    }
    Stages {
        stage('Clean Maven Repo') {
            steps {
                //Clear repo before build
                sh "find ~/.m2/repository -name *_.lastUpdated -exec rm -v {} \\;"
                sh "find ~/.m2/repository -name maven-metadata*.xml -exec rm -v {} \\;"
                sh "find ~/.m2/repository -name lastUpdated.properties -exec rm -v {} \\;"
                sh "find ~/.m2/repository -name *_.repositories -exec rm -v {} \\;"
            }
        }
        stage('Master Branch Build Deploy') {
            when {
                branch 'Master'
            }
            steps {
                //Build .jar
                sh "mvn clean package"

                //Stage jar on remote server
                sh "scp target/'${JAR}' '${PRD_USR_ACCT}'@'${PRD_DEPLOY_SRV}':'${PRD_DEPLOY_LOC}'/'${JAR}'"

                //Create symlink to new jar
                sh "ssh '${PRD_USR_ACCT}'@'${PRD_DEPLOY_SRV}' 'cd '${PRD_DEPLOY_LOC}'; ln -sf '${JAR}' '${APP_NAME}''"

                //Start service
                sh "ssh '${PRD_USR_ACCT}'@'${PRD_DEPLOY_SRV}' 'cd ~/apps-prod-location; ./'${START_SERVICE}''"
            }
        }
        stage('Test Branch Build Deploy') {
            when {
                branch 'test'
            }
            steps { ... }
        }
        stage('Develop Branch Build Deploy') {
            when {
                branch 'develop'
            }
            steps { ... }
        }
    }

    post {
        sucess {
            Mail to:"DLlist@company.com"
            subject:"[SUCESS] - Job ${env.JOB_NAME}, Build #${env.BUILD_NUMBER}"
            mimeType:"text/html"
            body:"""
                <html>
                    <body>
                        <h1><p style="color:green">FINISHED BUILD:</p><h1>
                        <h3><a hef="${env.RUN_DISPLAY_URL}">Click for build #${currentBuild.id} view</a></h3>
                        <h3><a hef="${env.RUN_DISPLAY_URL}">Click for #${currentBuild.projectName} stage view</a></h3>
                    </body>
                </html>
            """
        }
        failure {
            Mail to:"DLlist@company.com"
            subject:"[FAILURE] - Buld failed on ${currentBuild.projectName}, Build #${env.BUILD_NUMBER}"
            mimeType:"text/html"
            body:"""
                <html>
                    <body>
                        <h1><p style="color:red">FAILED BUILD:</p><h1>
                        <h3><a hef="${env.RUN_DISPLAY_URL}">Click for build #${currentBuild.id} view</a></h3>
                        <h3><a hef="${env.RUN_DISPLAY_URL}">Click for #${currentBuild.projectName} stage view</a></h3>
                    </body>
                </html>
            """
        }
    }
}